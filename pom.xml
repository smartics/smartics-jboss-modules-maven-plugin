<?xml version="1.0"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.smartics.maven.plugin</groupId>
  <artifactId>smartics-jboss-modules-maven-plugin</artifactId>
  <version>2.0.2-SNAPSHOT</version>
  <packaging>maven-plugin</packaging>

  <name>${project.artifactId}</name>
  <description>
    Generates an archive of modules to be copied to an JBoss 7 installation.
  </description>
  <url>${weburl}</url>
  <inceptionYear>2013</inceptionYear>
  <organization>
    <name>smartics</name>
    <url>http://www.smartics.de/</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
      <distribution>repo</distribution>
      <comments>Copyright 2013-2015 Kronseder &amp; Reiner GmbH, smartics</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>robert.reiner</id>
      <name>Robert Reiner</name>
      <url>https://www.smartics.de/go/robertreiner</url>
      <organization>Kronseder &amp; Reiner GmbH, smartics</organization>
      <organizationUrl>http://www.smartics.de/</organizationUrl>
    </developer>
    <developer>
      <id>anton.kronseder</id>
      <name>Anton Kronseder</name>
      <url>https://www.smartics.de/go/antonkronseder</url>
      <organization>Kronseder &amp; Reiner GmbH, smartics</organization>
      <organizationUrl>http://www.smartics.de/</organizationUrl>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Douglas Palmer</name>
      <roles>
        <role>Developer</role>
      </roles>
    </contributor>
    <contributor>
      <name>Sandra Kosmalla</name>
      <roles>
        <role>Developer</role>
      </roles>
    </contributor>
  </contributors>
  <issueManagement>
    <system>jira</system>
    <url>https://www.smartics.eu/jira/projects/SJBMMP</url>
  </issueManagement>
  <!--
  <ciManagement>
    <system>hudson</system>
    <url>http://www.smartics.eu/hudson</url>
  </ciManagement>
   -->

  <scm>
    <connection>scm:git:git@github.com:smartics/smartics-jboss-modules-maven-plugin</connection>
    <developerConnection>scm:git:git@github.com:smartics/smartics-jboss-modules-maven-plugin</developerConnection>
    <url>https://github.com/smartics/smartics-jboss-modules-maven-plugin</url>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <repository>
      <id>${project-visibility}</id>
      <name>internal smartics release repository</name>
      <url>${repo.server.upload}/${project-visibility}</url>
    </repository>
    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>${project-visibility}-snapshot</id>
      <name>internal smartics snapshot repository</name>
      <url>${repo.server.upload}/${project-visibility}-snapshot</url>
    </snapshotRepository>
    <site>
      <id>${project-visibility}-site</id>
      <name>documentation site</name>
      <url>${site.root}/${project.groupId}/${project.artifactId}/${project.version}</url>
    </site>
  </distributionManagement>

  <repositories>
    <repository>
      <id>smartics-${project-visibility}</id>
      <url>${repo.server.group}</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>smartics-${project-visibility}-snapshot</id>
      <url>${repo.server.group}</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <project-visibility>public</project-visibility>
    <donationId>ZNFSBTAQJ49HA</donationId>
    <!-- <ohlohProjectId>710977</ohlohProjectId> -->
    <twitterId>smartics</twitterId>
    <sonarId>${project.groupId}:${project.artifactId}</sonarId>

    <smartics-commons.version>0.5.2</smartics-commons.version>
    <testdoc.version>0.4.1</testdoc.version>

    <jdk.version>1.6</jdk.version>
    <repo.server>http://www.smartics.eu/nexus</repo.server>
    <repo.server.prefix>${repo.server}/content</repo.server.prefix>
    <repo.server.group>${repo.server.prefix}/groups/public-group</repo.server.group>
    <repo.server.base>${repo.server.prefix}/repositories</repo.server.base>
    <repo.server.upload>dav:${repo.server.base}</repo.server.upload>

    <site.root>scp://www.smartics.eu/home/smartics/public_html/${project-visibility}</site.root>

    <!-- The following properties are accessible from site documentation and therefore contain no dots. -->
    <webroot>https://www.smartics.eu</webroot>
    <weburl>${webroot}/${project.groupId}/${project.artifactId}/${project.version}</weburl>
    <scm-weburl>https://www.smartics.eu/svn/public</scm-weburl> <!-- No subdir ${project-visibility} currently. -->
    <ci-url>http://www.smartics.eu/hudson</ci-url>
    <sonar-url>http://www.smartics.eu/sonar</sonar-url>
    <sonar-url-project>${sonar-url}/dashboard/index/${sonarId}</sonar-url-project>
    <repo-url>https://www.smartics.eu/nexus</repo-url> <!-- HTTPs -->
    <repo-download-url>${repo-url}/service/local/artifact/maven/redirect</repo-download-url>

    <webroot-projects>http://www.smartics.de/projects</webroot-projects>

    <!-- Project settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Plugin Versions -->
    <maven-fluido-smartics-skin_version>2.0.5</maven-fluido-smartics-skin_version>

    <hudson-maven-plugin.version>0.2.8</hudson-maven-plugin.version>
    <config-smartics-hudson.version>0.3.0</config-smartics-hudson.version>

    <buildmetadata-maven-plugin.version>1.5.1</buildmetadata-maven-plugin.version>

    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
    <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
    <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
    <maven-release-plugin.version>2.5.2</maven-release-plugin.version>
    <maven-install-plugin.version>2.5.1</maven-install-plugin.version>
    <maven-scm-plugin.version>1.8.1</maven-scm-plugin.version>
    <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>
    <versions-maven-plugin.version>2.1</versions-maven-plugin.version>
    <maven-site-plugin.version>3.3</maven-site-plugin.version>
    <maven-license-plugin.version>1.9.0</maven-license-plugin.version>

    <!--  Dependency versions -->
    <maven.version>3.2.5</maven.version>
    <maven.project.version>2.2.1</maven.project.version>
    <maven-plugin-plugin.version>3.2</maven-plugin-plugin.version>
    <aether.version>1.0.0.v20140518</aether.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>de.smartics.util</groupId>
      <artifactId>smartics-commons</artifactId>
      <version>${smartics-commons.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.5</version>
    </dependency>


    <!--  ... maven ....................................................... -->

    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>3.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>${maven.project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${maven.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <version>${maven.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${maven.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-archiver</artifactId>
      <version>2.5</version>
    </dependency>


    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-api</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-transport-wagon</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-lightweight</artifactId>
      <version>2.0</version>
    </dependency>

    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jandex</artifactId>
      <version>1.0.3.Final</version>
    </dependency>


    <!-- ... other ........................................................ -->

    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom2</artifactId>
      <version>2.0.5</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.6.4</version>
    </dependency>

    <!-- ... test ......................................................... -->

    <dependency>
      <groupId>de.smartics.util</groupId>
      <artifactId>smartics-test-utils</artifactId>
      <version>0.3.3</version>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <!--
    <dependency>
      <groupId>de.smartics.testdoc</groupId>
      <artifactId>testdoc-core</artifactId>
      <version>${testdoc.version}</version>
      <scope>test</scope>
    </dependency>
     -->
    <dependency>
      <groupId>de.smartics.testdoc</groupId>
      <artifactId>testdoc-annotations</artifactId>
      <version>${testdoc.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.sun</groupId>
          <artifactId>tools</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>de.smartics.util</groupId>
      <artifactId>smartics-jboss-utils</artifactId>
      <version>0.1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-app</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-bom</artifactId>
      <version>1.0.0</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-broken</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>test-setup-artifacts-does-not-exist</artifactId>
          <groupId>de.smartics.test.setup</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-broken-optional</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-commons</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-dep-pom</artifactId>
      <version>1.0.0</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-domain</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-exclusion</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-exclusion-replace</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-lib-bom</artifactId>
      <version>1.0.0</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.smartics.test.setup</groupId>
      <artifactId>test-setup-artifacts-pom</artifactId>
      <version>0.1.1</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>de.smartics.ci</groupId>
          <artifactId>hudson-maven-plugin</artifactId>
          <version>${hudson-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>de.smartics.config</groupId>
              <artifactId>config-smartics-hudson</artifactId>
              <version>${config-smartics-hudson.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.wagon</groupId>
              <artifactId>wagon-webdav</artifactId>
              <version>1.0-beta-2</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <index>true</index>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <Implementation-SCM-Revision-Number>${build.scmRevision.id}</Implementation-SCM-Revision-Number>
                <Implementation-SCM-Revision-Date>${build.scmRevision.date}</Implementation-SCM-Revision-Date>
                <Implementation-URL>${project.url}</Implementation-URL>
                <Implementation-Date>${build.date}</Implementation-Date>
                <Implementation-Timestamp>${build.timestamp.millis}</Implementation-Timestamp>
                <Implementation-DatePattern>${build.date.pattern}</Implementation-DatePattern>
                <Implementation-Full-Version>${build.version.full}</Implementation-Full-Version>
                <Built-OS>${os.name} / ${os.arch} / ${os.version}</Built-OS>
                <Built-By>${build.user}</Built-By>
                <Maven-Version>${build.maven.version}</Maven-Version>
                <Java-Version>${java.version}</Java-Version>
                <Java-Vendor>${java.vendor}</Java-Vendor>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <releaseProfiles>release</releaseProfiles>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>${maven-scm-plugin.version}</version>
          <configuration>
            <connectionType>developerConnection</connectionType>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven-project-info-reports-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
          <dependencies>
            <dependency>
              <!-- add support for ssh/scp -->
              <groupId>org.apache.maven.wagon</groupId>
              <artifactId>wagon-ssh</artifactId>
              <version>1.0</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>attach-descriptor</id>
              <goals>
                <goal>attach-descriptor</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <locales>en</locales>
            <relativizeDecorationLinks>false</relativizeDecorationLinks>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>

        <!--
          This configuration is for synchronizing Eclipse configuration only.
            https://docs.sonatype.org/display/M2ECLIPSE/Customizable+build+lifecycle+mapping+for+m2e+extensions+developers

          No plugin involved:
            http://dev.eclipse.org/mhonarc/lists/m2e-users/msg00657.html
          -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>de.smartics.maven.plugin</groupId>
                    <artifactId>buildmetadata-maven-plugin</artifactId>
                    <versionRange>[0.0.0,)</versionRange>
                    <goals>
                      <goal>provide-buildmetadata</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.redhat.rcm.maven.plugin</groupId>
                    <artifactId>buildmetadata-maven-plugin</artifactId>
                    <versionRange>[0.0.0,)</versionRange>
                    <goals>
                      <goal>provide-buildmetadata</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[0.0.0,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-toolchains-plugin</artifactId>
                    <versionRange>[0.0.0,)</versionRange>
                    <goals>
                      <goal>toolchain</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>de.smartics.maven.plugin</groupId>
                    <artifactId>smartics-jboss-modules-maven-plugin</artifactId>
                    <versionRange>[0.0.0,)</versionRange>
                    <goals>
                      <goal>create-modules-archive</goal>
                      <goal>index</goal>
                      <goal>jandex</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>

                <!--
                  This plugin's configuration is used to store Eclipse m2e
                  settings only. It has no influence on the Maven build itself.
                  -->
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <versionRange>[3.2,)</versionRange>
                    <goals>
                      <goal>descriptor</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${maven.version}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>${jdk.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>

        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.redhat.rcm.maven.plugin</groupId>
        <artifactId>buildmetadata-maven-plugin</artifactId>
        <version>${buildmetadata-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>provide-buildmetadata</goal>
            </goals>
            <configuration>
              <createPropertiesReport>true</createPropertiesReport>
              <createXmlReport>false</createXmlReport>
              <propertiesOutputFile>${project.build.outputDirectory}/META-INF/buildmetadata.properties</propertiesOutputFile>
              <addScmInfo>true</addScmInfo>
              <hideCommandLineInfo>false</hideCommandLineInfo>
              <hideMavenOptsInfo>false</hideMavenOptsInfo>
              <hideJavaOptsInfo>false</hideJavaOptsInfo>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <buildDatePattern>dd.MM.yyyy HH:mm:ss</buildDatePattern>
          <remoteVersion>origin/master</remoteVersion>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>${maven-plugin-plugin.version}</version>
        <executions>
          <execution>
            <id>mojo-descriptor</id>
            <goals>
              <goal>descriptor</goal>
            </goals>
          </execution>
          <!-- <execution>
            <id>help-goal</id>
            <goals>
              <goal>helpmojo</goal>
            </goals>
          </execution> -->
        </executions>
        <configuration>
          <!-- see http://jira.codehaus.org/browse/MNG-5346 -->
          <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
        </configuration>
      </plugin>

      <plugin>
        <!-- Required until update to pom-root: 30.1.2 -->
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <version>${maven-license-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>**/.externalToolBuilders/**</exclude>
            <exclude>**/.gitignore/**</exclude>
            <exclude>**/.fbprefs</exclude>
            <exclude>**/.pmd</exclude>
            <exclude>**/.checkstyle</exclude>
            <exclude>**/.ruleset</exclude>
            <exclude>**/COPYRIGHT.txt</exclude>
            <exclude>**/LICENSE.txt</exclude>
            <exclude>**/README.md</exclude>
            <exclude>**/LICENSE-*</exclude>
            <exclude>**/*.xcf</exclude>
            <exclude>**/*.uml</exclude>
            <exclude>**/*.umlusc</exclude>
            <exclude>**/javadoc.xml</exclude>
            <exclude>**/header.txt</exclude>
            <exclude>**/.idea/**</exclude>
          </excludes>
          <strictCheck>true</strictCheck>
          <header>src/etc/header.txt</header>
          <headerDefinitions>
            <headerDefinition>src/etc/javadoc.xml</headerDefinition>
          </headerDefinitions>
          <properties>
            <year>${build.copyright.year}</year>
          </properties>
          <mapping>
            <vm>XML_STYLE</vm>
            <jnlp>XML_STYLE</jnlp>
          </mapping>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version><!--$NO-MVN-MAN-VER$-->
        <executions>
          <execution>
            <id>transform</id>
            <phase>pre-site</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <xslt in="${basedir}/src/main/resources/xsd/jboss-modules-descriptor.xsd" out="${project.build.directory}/generated-site/xdoc/jboss-modules-descriptor-doc.xml" style="${basedir}/src/etc/xsl/create-modules-doc.xsl" />
                <copy todir="${project.build.directory}/generated-site/resources/download">
                  <fileset dir="${basedir}/src/main/resources/">
                    <include name="**/*.xsd" />
                  </fileset>
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-nodeps</artifactId>
            <version>1.8.1</version>
          </dependency>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-trax</artifactId>
            <version>1.8.0</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>cim</report>
              <report>dependencies</report>
              <report>dependency-convergence</report>
              <report>dependency-management</report>
              <!-- <report>distribution-management</report> -->
              <report>index</report>
              <report>issue-tracking</report>
              <report>license</report>
              <!-- <report>mailing-list</report> -->
              <report>modules</report>
              <report>plugin-management</report>
              <report>project-team</report>
              <report>scm</report>
              <report>summary</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>com.redhat.rcm.maven.plugin</groupId>
        <artifactId>buildmetadata-maven-plugin</artifactId>
        <version>${buildmetadata-maven-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>${maven-plugin-plugin.version}</version>
        <configuration>
          <requirements>
            <maven>3.1</maven>
          </requirements>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>it</id>
      <!-- mvn -Pit integration-test -Dinvoker.test=multimodule-project -->
      <build>
        <defaultGoal>install</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-invoker-plugin</artifactId>
            <version>1.9</version>
            <configuration>
              <debug>true</debug>
              <projectsDirectory>src/it</projectsDirectory>
              <settingsFile>src/it/settings.xml</settingsFile>

              <pomIncludes>
                <pomInclude>*/pom.xml</pomInclude>
              </pomIncludes>

              <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
              <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
              <preBuildHookScript>setup</preBuildHookScript>
              <postBuildHookScript>validate</postBuildHookScript>

              <goals>
                <goal>clean</goal>
                <goal>package</goal>
              </goals>
            </configuration>
            <executions>
              <execution>
                <id>integration-test-v1</id>
                <configuration>
                  <properties>
                    <module.source.dir>src/etc/jboss-modules/v1</module.source.dir>
                    <module.target.dir>target/jboss-modules/v1</module.target.dir>
                  </properties>
                  <scriptVariables>
                    <targetDir>target/jboss-modules/v1</targetDir>
                  </scriptVariables>
                </configuration>
                <goals>
                  <goal>install</goal>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>integration-test-v2</id>
                <configuration>
                  <properties>
                    <module.source.dir>src/etc/jboss-modules/v2</module.source.dir>
                    <module.target.dir>target/jboss-modules/v2</module.target.dir>
                  </properties>
                  <scriptVariables>
                    <targetDir>target/jboss-modules/v2</targetDir>
                  </scriptVariables>
                </configuration>
                <goals>
                  <goal>install</goal>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
